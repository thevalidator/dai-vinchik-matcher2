package ru.thevalidator.daivinchikmatcher2.service.daivinchik.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.DaiVinchikDialogAnswerService;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.DaiVinchikMessageService;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.DaiVinchikProfileGenerator;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.DaiVinchikProfileService;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.model.CaseType;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.model.DaiVinchikDialogAnswer;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.model.ProfileFillState;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.model.profile.DaiVinchikUserProfile;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.model.profile.Gender;
import ru.thevalidator.daivinchikmatcher2.service.daivinchik.model.profile.ProfileInitResponse;
import ru.thevalidator.daivinchikmatcher2.vk.dto.MessageAndKeyboard;
import ru.thevalidator.daivinchikmatcher2.vk.dto.dupl.message.SendMessageResultResponse;

import java.util.concurrent.TimeUnit;

@Component
public class DaiVinchikProfileServiceImpl implements DaiVinchikProfileService {

    private static final int TOTAL_PROFILE_QUESTIONS_COUNT = 8;
    private final DaiVinchikProfileGenerator profileGenerator;

    @Autowired
    public DaiVinchikProfileServiceImpl(DaiVinchikProfileGenerator profileGenerator) {
        this.profileGenerator = profileGenerator;
    }

    @Override
    public ProfileInitResponse fillRandomProfile(DaiVinchikMessageService messageService, DaiVinchikDialogAnswerService answerService) {
        DaiVinchikUserProfile profile = profileGenerator.generateRandomProfile();
        return fillProfile(profile, messageService, answerService);

        //–Ø –∑–Ω–∞–∫–æ–º–ª—é –∫—Ä–∞—Å–∏–≤—ã—Ö –ª—é–¥–µ–π –∏ –Ω–∞—Ö–æ–∂—É –¥—Ä—É–∑–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º! üòç<br><br>–°–æ–∑–¥–∞–π –∞–Ω–∫–µ—Ç—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏ –∫–æ–º—É —Ç—ã –ø–æ–Ω—Ä–∞–≤–∏—à—å—Å—è üî•<br><br>–ñ–º–∏ –ù–∞—á–∞—Ç—å üëáüëáüëá
        // >> [4, 2, 19, -91050183, 1706271699, –ù–∞—á–∞—Ç—å, {payload={"command":"start"}, title= ... }, {}]

        //–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥—Ä—É–∑–µ–π. –ú–æ–∂–Ω–æ —è –∑–∞–¥–∞–º —Ç–µ–±–µ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤? keyboard={one_time=true, buttons=[[{action={type=text, payload=, label=üëç}, color=positive}]]}}

        //??? –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?, {title= ... , keyboard={one_time=false, buttons=[[{action={type=text, payload=, label=24}, color=default}]]}}, {}]
        //

        //??? –¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º, {title= ... , keyboard={one_time=false, buttons=[[{action={type=text, payload=1, label=–Ø –¥–µ–≤—É—à–∫–∞}, color=default}, {action={type=text, payload=2, label=–Ø –ø–∞—Ä–µ–Ω—å}, color=default}]]}}, {}]
        //

        //–ö—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?
        //

        //–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?
        //

        //–ö–∞–∫ –º–Ω–µ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å?
        //

        //–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏, —á–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –∫–æ–º–ø–∞–Ω–∏—é.
        //

        //–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ, –µ–≥–æ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        //

        // –í—Å–µ –≤–µ—Ä–Ω–æ?,
        //>> –î–∞, {payload=1

        //"–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã"

    }

    @Override
    public ProfileInitResponse fillProfile(DaiVinchikUserProfile profile,
                                           DaiVinchikMessageService messageService,
                                           DaiVinchikDialogAnswerService answerService) {
        boolean isFinished = false;
        System.out.println(">> PROFILING STARTED");
        int controlQuestionCount = 0;
        int lastConversationMessageId;
        SendMessageResultResponse rs = null;
        try {
            while (!isFinished) {
                TimeUnit.SECONDS.sleep(5);

                MessageAndKeyboard data = messageService.getDaiVinchikLastMessageAndKeyboard();
                String msgText = data.getMessage().getText();

                if (msgText.contains("–∑–Ω–∞–∫–æ–º–ª—é –∫—Ä–∞—Å–∏–≤—ã—Ö –ª—é–¥–µ–π –∏ –Ω–∞—Ö–æ–∂—É –¥—Ä—É–∑–µ–π")
                        || msgText.contains("–ñ–º–∏ –ù–∞—á–∞—Ç—å")) {
                    rs = messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    data.getKeyboard().getButtons().get(0).get(0).getAction().getLabel(),
                                    data.getKeyboard().getButtons().get(0).get(0).getAction().getPayload(),
                                    CaseType.UNKNOWN));
                } else if (msgText.contains("–∑–∞–¥–∞–º —Ç–µ–±–µ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤")) {
                    rs = messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    data.getKeyboard().getButtons().get(0).get(0).getAction().getLabel(),
                                    data.getKeyboard().getButtons().get(0).get(0).getAction().getPayload(),
                                    CaseType.UNKNOWN));
                } else if (msgText.contains("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")) {
                    rs = messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    String.valueOf(profile.getAge()),
                                    null,
                                    CaseType.UNKNOWN));
                    controlQuestionCount++;
                } else if (msgText.contains("–æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º")) {
                    var action = profile.getGender().equals(Gender.FEMALE) ?
                            data.getKeyboard().getButtons().get(0).get(0).getAction()
                            : data.getKeyboard().getButtons().get(0).get(1).getAction();
                    rs = messageService.sendAnswerMessage(new DaiVinchikDialogAnswer(
                            action.getLabel(),
                            action.getPayload(),
                            CaseType.UNKNOWN));
                    controlQuestionCount++;
                } else if (msgText.contains("–ö—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?")) {
                    var action = profile.getGenderToSearch().equals(Gender.FEMALE) ?    //@TODO: check correct gender selection
                            data.getKeyboard().getButtons().get(0).get(0).getAction()
                            : profile.getGender().equals(Gender.MALE) ?
                            data.getKeyboard().getButtons().get(0).get(1).getAction() :
                            data.getKeyboard().getButtons().get(0).get(2).getAction();

                    rs = messageService.sendAnswerMessage(new DaiVinchikDialogAnswer(
                            action.getLabel(),
                            action.getPayload(),
                            CaseType.UNKNOWN));
                    controlQuestionCount++;
                } else if (msgText.contains("–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?")) {
                    messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    profile.getCity(),
                                    null,
                                    CaseType.UNKNOWN));
                    controlQuestionCount++;
                } else if (msgText.contains("–ö–∞–∫ –º–Ω–µ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å?")) {
                    rs = messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    profile.getName(),
                                    null,
                                    CaseType.UNKNOWN));
                    controlQuestionCount++;
                } else if (msgText.contains("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏")) {
                    rs = messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    profile.getProfileText(),
                                    null,
                                    CaseType.UNKNOWN));
                    controlQuestionCount++;
                } else if (msgText.contains("–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ")) {
                    String sendPhotoRs = messageService.sendPhotoWithDelay(profile.getPhoto());
                    //@TODO: do I need this response?
                    controlQuestionCount++;
                } else if (msgText.contains("–í—Å–µ –≤–µ—Ä–Ω–æ?")) {
                    rs = messageService.sendAnswerMessage(
                            new DaiVinchikDialogAnswer(
                                    data.getKeyboard().getButtons().get(0).get(0).getAction().getLabel(),
                                    data.getKeyboard().getButtons().get(0).get(0).getAction().getPayload(),
                                    CaseType.UNKNOWN));
                    isFinished = true;
                    controlQuestionCount++;

                } else {
                    DaiVinchikDialogAnswer answer = answerService.findAnswer(data);
                    rs = messageService.sendAnswerMessage(answer);
                    if (answer.getType().equals(CaseType.PROFILE)) {
                        isFinished = true;
                    }
                }
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
        }


        lastConversationMessageId = rs.getConversationMessageId();
        ProfileInitResponse response = new ProfileInitResponse();
        response.setState(controlQuestionCount >= TOTAL_PROFILE_QUESTIONS_COUNT ? ProfileFillState.FULL : ProfileFillState.PARTIAL);
        response.setLastConversationMessageId(lastConversationMessageId);
        response.setProfile(profile);
        System.out.println(">> PROFILING FINISHED. Questions answered:" + controlQuestionCount
                + " Fill state: " + response.getState());
        return response;
    }

    @Override
    public DaiVinchikProfileGenerator getProfileGenerator() {
        return profileGenerator;
    }

}
